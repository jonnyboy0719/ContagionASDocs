{"doc_name":"Contagion Angelscript API Documentations","doc_logo":"images/logo.png","doc_gen":1599310070,"categories":{"Engine":{"Admin System":{"desc":"Used to add, remove or just do simple administrative tasks on the server.","page":"Admin System","category":"Engine","desc_md":"false","type":"void","functions":[{"global":null,"name":"AddAdmin","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"CAdminSystem","child":null,"desc":"Adds the player to the admin list, if the player doesn&apos;t already exist.","desc_md":null,"desc_file":null,"type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that should be added to the admin list"}},{"global":null,"name":"AdminAccessLevel_t","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of the admin acess levels","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"LEVEL_NONE":"Has no access (Default)","LEVEL_MODERATOR":"Can be recognized as an moderator.","LEVEL_ADMIN":"Can be recognized as an administrator.","LEVEL_SUPERADMIN":"Can do everything (super-administrator)."}},{"global":null,"name":"AdminExist","namefake":null,"isfunc":null,"classfunction":null,"base":"bool","object":null,"ref":null,"namespace":"CAdminSystem","child":null,"desc":"Checks if the player exist in the admin list","desc_md":null,"desc_file":null,"type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the player exist in the admin list","args":{"%class_CTerrorPlayer% pPlayer":"The player we are trying to check"}},{"global":null,"name":"CanTargetPlayer","namefake":null,"isfunc":null,"classfunction":null,"base":"bool","object":null,"ref":null,"namespace":"CAdminSystem","child":null,"desc":"Checks if the player can be targeted or not (all depends on immunity and&#47;or he&apos;s a bot)","desc_md":null,"desc_file":null,"type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the player can be targeted","args":{"%class_CTerrorPlayer% pTarget":"The player that we are trying to target","%class_CTerrorPlayer% pTarget2":"The player that is trying to target said player"}},{"global":null,"name":"PlayerHasAccessLevel","namefake":null,"isfunc":null,"classfunction":null,"base":"bool","object":null,"ref":null,"namespace":"CAdminSystem","child":null,"desc":"Checks if the player has the required access level, or higher","desc_md":null,"desc_file":null,"type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the player has the required flag","args":{"%class_CTerrorPlayer% pPlayer":"The player that should be checked on","%enum_AdminAccessLevel_t% iAccessLevel":"The access flag we want to check"}},{"global":null,"name":"RemoveAdmin","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"CAdminSystem","child":null,"desc":"Removes the player from the admin list, this will also erase all the flags from the player.","desc_md":null,"desc_file":null,"type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that should be removed from the admin list"}},{"global":null,"name":"SetPlayerAccessLevel","namefake":null,"isfunc":null,"classfunction":null,"base":"bool","object":null,"ref":null,"namespace":"CAdminSystem","child":null,"desc":"Set a specific player admin access.","desc_md":null,"desc_file":null,"type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that should be checked on","%enum_AdminAccessLevel_t% iAccessLevel":"The access flag we want to set"}}]},"Engine":{"desc":"Class used for engine related purposes.","page":"Engine","category":"Engine","desc_md":"false","type":"void","functions":[{"global":null,"name":"AddToDownloadTable","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Adds the following string into the download table","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strFileName":"The file that should be added onto the download table"}},{"global":null,"name":"EdictCount","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the free and used edict count","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_out% iFree":"The number of free edicts","%int_out% iUsed":"The number of used edicts"}},{"global":null,"name":"EmitSoundEntity","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Emits a sound from the specified entity","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"warning","infobox_desc":"32-Bit version of Contagion does not support Steam Audio! You need use WWise soundevents for strSoundFile.","return":null,"args":{"%class_CBaseEntity% pEntity":"The entity where the sound will play from","%string_in% strSoundFile":"The file we want to play"}},{"global":null,"name":"EmitSoundPosition","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Emits a sound from the specified location","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"warning","infobox_desc":"32-Bit version of Contagion does not support Steam Audio! You need use WWise soundevents for strSoundFile.","return":null,"args":{"%int% index":"The index that plays this sound (if 0, then the sound is coming from the world)","%string_in% strSoundFile":"The file we want to play","%Vector_in% vecOrigin":"The position where the sound will play from","%float% flVol":"The volume of the sound","%int% iSoundLevel":"The DB level of the sound, normal DB level is 75","%int% iPitch":"The pitch of the sound (default is 100)"}},{"global":null,"name":"EnableCustomSettings","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enables and&#47;or disables CS (Custom Settings) Mode. This will allow certain values, and functions to be used. However, this will in return set the server into &quot;Custom&quot; state.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool% bEnable":"Enables or disables custom settings"}},{"global":null,"name":"Ent_Fire","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Fires an IO value to a specific entity.","desc_md":"true","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strName":"The targeted entity name","%string_in% strAction":"The action it should send","%string_in% strValue":"The value we want to set it as, otherwise its empty (optional)","%string_in% strDelay":"When it should be fired, otherwise it&apos;s fired instantly (optional)"}},{"global":null,"name":"Ent_Fire_Ent","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Fires an IO value to a specific entity.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pEntity":"The targeted entity","%string_in% strAction":"The action it should send","%string_in% strValue":"The value we want to set it as, otherwise its empty (optional)","%string_in% strDelay":"When it should be fired, otherwise it&apos;s fired instantly (optional)"}},{"global":null,"name":"PRECACHE_TYPE","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of precache types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"sound":"Used to precache sounds","model":"Used to precache models and &#47; or sprites","material":"Used to precache materials (VMT only)","particle":"Used to precache particle files"}},{"global":null,"name":"PrecacheFile","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Precaches the files, so the client and &#47; or server doesn&apos;t crash when spawning said value.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_PRECACHE_TYPE% iValue":"Determines what we should precache","%string_in% strFileName":"The file that should be precached"}},{"global":null,"name":"RunConsoleCommand","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Executes a server console command.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strConsoleCommand":"The server command that will be executed."}}]},"Schedule":{"desc":"Class used to create a task and / or schedule.","page":"Schedule","category":"Engine","desc_md":"false","type":"void","functions":[{"global":null,"name":"Create","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CSchedule","ref":null,"namespace":"Schedule","child":null,"desc":"Creates a object of CSchedule@, which can be manipulated.","desc_md":null,"desc_file":null,"type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CSchedule@ object, which can be manipulated.","args":{"%string_in% strFunction":"The name of the void function","%float_in% flDelay":"When this task should be fired (Counts in seconds)","%int_in% iRepeat = 0":"How many times it should repeat (-1 means it&apos;s infinite)"}},{"global":null,"name":"DoTask","namefake":null,"isfunc":"true","classfunction":null,"base":"void","object":"CSchedule","ref":null,"namespace":null,"child":null,"desc":"Forces the object to fire it&apos;s schedule","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"Pause","namefake":null,"isfunc":"true","classfunction":null,"base":"void","object":"CSchedule","ref":null,"namespace":null,"child":null,"desc":"Pauses the schedule","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"Resume","namefake":null,"isfunc":"true","classfunction":null,"base":"void","object":"CSchedule","ref":null,"namespace":null,"child":null,"desc":"Resumes the schedule","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"Task","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"Schedule","child":null,"desc":"Fires a simple task.","desc_md":null,"desc_file":null,"type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float_in% flDelay":"When this task should be fired (Counts in seconds)","%string_in% strFunction":"The name of the void function"}}]},"Console Commands":{"desc":"Console commands that can be either manipulated, or used via static void functions.","page":"Console Commands","category":"Engine","desc_md":"false","type":"void","functions":[{"global":null,"name":"AddFlag","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CASConVar","ref":null,"namespace":null,"child":null,"desc":"Adds a flag into our convar","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int% nFlag":"Our flag we want to add"}},{"global":null,"name":"Arg","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CASCommand","ref":null,"namespace":null,"child":null,"desc":"Grabs the argument from the specified index value","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the requested argument","args":{"%int_in% nIndex":"The argument index"}},{"global":null,"name":"ArgFull","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CASCommand","ref":null,"namespace":null,"child":null,"desc":"Grabs all the arguments as a whole string","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns all the arguments in one whole string","args":{}},{"global":null,"name":"Args","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CASCommand","ref":null,"namespace":null,"child":null,"desc":"Grabs the amount of arguments we currently have","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the amount of arguments","args":{}},{"global":null,"name":"Create","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"ConCommand","child":null,"desc":"Creates a static console command","desc_md":null,"desc_file":null,"type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strCommand":"The name of the console command","%string_in% strFunction":"The name of the void function","%string_in% strHelp = \"\"":"The help text","%enum_AdminAccessLevel_t% iAccessLevel = LEVEL_NONE":"The admin access level"}},{"global":null,"name":"Create2","namefake":"Create","isfunc":null,"classfunction":null,"base":null,"object":"CASConVar","ref":null,"namespace":"ConVar","child":null,"desc":"Creates a console variable.","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns CASConVar@ object which can be manipulated","args":{"%string_in% strCommand":"The name of the console command","%string_in% strDefaultVar":"The default value","%string_in% strHelp = \"\"":"The help text","%enum_AdminAccessLevel_t% iAccessLevel = LEVEL_NONE":"The admin access level","%bool_in% bMin = false":"If true, it will clamp the float as the lowest possible value","%float_in% flMin = 0.0f":"The lowest possible value","%bool_in% bMax = false":"If true, it will clamp the float as the highest possible value","%float_in% flMax = 0.0f":"The highest possible value"}},{"global":null,"name":"Find","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CASConVar","ref":null,"namespace":"ConVar","child":null,"desc":"Finds a console variable","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns CASConVar@ object which can be manipulated","args":{"%string_in% strCommand":"The name of the console command"}},{"global":null,"name":"Find2","namefake":"Find","isfunc":"true","classfunction":null,"base":null,"object":"CASCommand","ref":null,"namespace":null,"child":null,"desc":"Finds the specified argument, and returns it&apos;s ID","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the argument ID","args":{"%string_in% szName":"The name of the argument"}},{"global":null,"name":"GetBool","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CASConVar","ref":null,"namespace":null,"child":null,"desc":"Checks if the value is true or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current value","args":{}},{"global":null,"name":"GetDefaultValue","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CASConVar","ref":null,"namespace":null,"child":null,"desc":"Grabs the default value of the string","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the default value","args":{}},{"global":null,"name":"GetFloat","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CASConVar","ref":null,"namespace":null,"child":null,"desc":"Grabs the current value as a float","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current value","args":{}},{"global":null,"name":"GetInt","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CASConVar","ref":null,"namespace":null,"child":null,"desc":"Grabs the current value as an interger","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current value","args":{}},{"global":null,"name":"GetValue","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CASConVar","ref":null,"namespace":null,"child":null,"desc":"Grabs the current value of the string","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current value","args":{}},{"global":null,"name":"HasFlag","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CASConVar","ref":null,"namespace":null,"child":null,"desc":"Checks if this convar has a certain flag","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we have the flag","args":{"%int% nFlag":"Our flag we want to check"}},{"global":null,"name":"Help","namefake":null,"isfunc":null,"classfunction":null,"base":"string","object":null,"ref":null,"namespace":"ConCommand","child":null,"desc":"Print the help message from a console command","desc_md":null,"desc_file":null,"type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strCommand":"The name of the console command"}},{"global":null,"name":"Register","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"ConVar","child":null,"desc":"Register&apos;s a console variable to a void function","desc_md":"true","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CASConVar% pConVar":"The console variable object","%string_in% strFunction":"The name of the void function"}},{"global":null,"name":"RemoveFlag","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CASConVar","ref":null,"namespace":null,"child":null,"desc":"Removes a flag from our convar","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int% nFlag":"Our flag we want to remove"}},{"global":null,"name":"SetAccessLevel","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CASConVar","ref":null,"namespace":null,"child":null,"desc":"Sets the admin access level required to execute this convar","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_AdminAccessLevel_t% iAccessLevel = LEVEL_NONE":"The admin access level"}},{"global":null,"name":"SetAccessLevel2","namefake":"SetAccessLevel","isfunc":"true","classfunction":null,"base":null,"object":"CASCommand","ref":null,"namespace":null,"child":null,"desc":"Sets the admin access level required to execute this concommand","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_AdminAccessLevel_t% iAccessLevel = LEVEL_NONE":"The admin access level"}},{"global":null,"name":"SetValue","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CASConVar","ref":null,"namespace":null,"child":null,"desc":"Sets the new value for the convar","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strValue":"Our new desired value"}}]}},"Entities":{"Infected":{"desc":"Manipulates the Infected object entity, and it's values.","page":"Infected","subpage":"CBaseEntity","category":"Entities","desc_md":"false","type":"void","functions":[{"global":null,"name":"IsFemaleZombie","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the zombie is using a female model","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the zombie is using a female model","args":{}},{"global":null,"name":"IsRiot","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the zombie is a riot zombie","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the zombie is a riot zombie","args":{}}]},"Entity Creator":{"desc":"Creates new entities trough angelscript","page":"Entity Creator","category":"Entities","desc_md":"false","type":"void","functions":[{"global":null,"name":"Add","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CEntityData","ref":null,"namespace":null,"child":null,"desc":"Adds keyvalues into CEntityData","desc_md":"true","desc_file":"CEntityData_AddInput","type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strInput":"Key input value","%string_in% strValue":"Key value","%bool% bAfterSpawn":"If true, it will send a input value after it spawns (AcceptInput)","%string_in% strDelay":"Delay time (Only used if it&apos;s an AcceptInput value)"}},{"global":null,"name":"Create","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":"EntityCreator","child":null,"desc":"Create and spawn a new entity within the map","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{"%string_in% strEntity":"The entity we want to create","%Vector% vecOrigin":"The position, where it should spawned and teleported to","%QAngle% qAngle":"The angles, where it should look at","%class_CEntityData% EntData":"[optional] Adds custom keyvalues to the entity before it spawns"}},{"global":null,"name":"EntityData","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CEntityData","ref":null,"namespace":"EntityCreator","child":null,"desc":"Creates a CEntityData@ object, which can be used to manipulate the entity spawn values","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CEntityData@ object, which can be manipulated.","args":{}}]},"CTerrorPlayer":{"desc":"Manipulates the CTerrorPlayer object entity, and it's values.","page":"CTerrorPlayer","subpage":"CBasePlayer","category":"Entities","desc_md":"false","type":"void","functions":[{"global":null,"name":"ConsoleCommand","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"The player will send a console command to the server","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"custom","infobox_desc":"null","return":null,"args":{"%string_in% szCommand":"Console command"}},{"global":null,"name":"DropWeapon","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Drops the weapon slot, if we have a weapon on the specific slot","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we able to drop the weapon","args":{"%int_in% iSlot":"The weapon slot we want to drop. We only allow slot 1-5"}},{"global":null,"name":"Escape","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Functions the same as the trigger &quot;trigger_escape&quot;, where it will tell the player to simply &quot;escape&quot;","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"ForceVoiceCommand","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"The player will play a voice command","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"custom","infobox_desc":"null","return":null,"args":{"%string_in% szVoiceCommand":"Our voice command we want to play","%bool_in% bForce":"If true, it will be forced to play, no matter what"}},{"global":null,"name":"GetCurrentWeapon","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"Returns the current active weapon","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{}},{"global":null,"name":"GetHudVisibility","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the hud visibility","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we able to see the hud","args":{}},{"global":null,"name":"GetMaxSpeed","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs our max possible speed","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the max speed value","args":{}},{"global":null,"name":"GetPlayerName","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the player name","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the name of the player","args":{}},{"global":null,"name":"GetSteamID64","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the SteamID64 from the player","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the SteamID64 as a string","args":{}},{"global":null,"name":"GetSurvivorName","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the name of the survivor","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the name of the current survivor","args":{}},{"global":null,"name":"GetWeaponSlot","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the weapon slot number of our desired weapon, if it&apos;s found","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the weapon slot number","args":{"%string_in% szClassname":"Find the weapon slot by classname (targetname also works)"}},{"global":null,"name":"GiveWeapon","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Gives a specific weapon to the player, if they have enough room for it","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we able to give this weapon to the player","args":{"%string_in% szClassname":"The classname of the weapon we want to give to the player"}},{"global":null,"name":"GrabConvar","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the value of the client convar, if it allows server manipulation","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the client convar value","args":{"%string_in% strConVar":"The client convar","%string_in% strDefault":"Default value, if the convar fails"}},{"global":null,"name":"GrabIP","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the IP of the player","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the IP as a string","args":{}},{"global":null,"name":"GrabPing","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the lentancy (ping) of the player","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the ping as an interger","args":{}},{"global":null,"name":"IsInfected","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the player is infected or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if this player is infected","args":{}},{"global":null,"name":"IsRoaring","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the player is currently roaring","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true, if the player is roaring","args":{}},{"global":null,"name":"m_afButtonLast","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks when the button was last pressed","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"m_afButtonPressed","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the button has been pressed","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"m_afButtonReleased","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the button has been released","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"OpenSteamOverlay","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Opens up the steam overlay (if the client allows such a thing)","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szHttp":"The website we want to visit"}},{"global":null,"name":"SetHudVisibility","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Overrides the hud visibility","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool_in% bIsHUDVisible":"Overrides the hud visibility"}},{"global":null,"name":"SetInfection","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Forces the infection, or removes it","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool% bState":"If false, it will remove the infection from the player, if they are infected","%float% flTimer = 30.0f":"The amount of time until the player gets infected, and turns"}},{"global":null,"name":"SetMaxSpeed","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the max possible speed","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"custom","infobox_desc":"null","return":null,"args":{"%int_in% iSpeed":"Overrides the max speed we can obtain. If set to 0, it will revert to default max speed"}},{"global":null,"name":"SetPlayerName","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the player name","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szPlayerName":"Overrides the player name on the server (resets if the player reconnect)"}}]},"CBasePlayer":{"desc":"Manipulates the CBasePlayer object entity, and it's values.","page":"CBasePlayer","subpage":"CBaseEntity","category":"Entities","desc_md":"false","type":"void","functions":[{"global":null,"name":"GetPlayerName","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the player name","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the name of the player","args":{}},{"global":null,"name":"GetUserID","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the userid","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the userid of the player","args":{}},{"global":null,"name":"IsBot","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the player is a bot or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if this is player is a bot","args":{}},{"global":null,"name":"IsConnected","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the player is connected","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if this is player is connected","args":{}},{"global":null,"name":"m_afButtonLast","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks when the button was last pressed","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"m_afButtonPressed","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the button has been pressed","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"m_afButtonReleased","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the button has been released","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}}]},"CPropDoorRotatingBreakable":{"desc":"Manipulates the CPropDoorRotatingBreakable object entity, and it's values.","page":"CPropDoorRotatingBreakable","subpage":"CBaseEntity","category":"Entities","desc_md":"false","type":"void","functions":[{"global":null,"name":"GetDoorHealth","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the health of the door","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the health of the door","args":{}},{"global":null,"name":"IsBreakable","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the door is breakable or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the door is breakable","args":{}},{"global":null,"name":"IsClosed","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the door is closed or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the door is closed","args":{}},{"global":null,"name":"IsClosing","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the door is closing or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the door is closing","args":{}},{"global":null,"name":"IsLocked","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the door is locked or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the door is locked","args":{}},{"global":null,"name":"IsOpen","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the door is open or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the door is open","args":{}},{"global":null,"name":"IsOpening","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the door is opening or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the door is opening","args":{}},{"global":null,"name":"LockState","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the locked state","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool_in% state":"If true, the door will be locked"}},{"global":null,"name":"SetBreakable","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the door breakable state","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool_in% state":"If true, we will be able to break the door"}},{"global":null,"name":"SetDoorHealth","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the door health","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iHealth":"The health this door should have."}}]},"CBaseEntity":{"desc":"Manipulates the CBaseEntity object entity, and it's values.","page":"CBaseEntity","category":"Entities","desc_md":"false","type":"void","functions":[{"global":null,"name":"ChangeTeam","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Changes the team of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iTeamID":"Changes the objects team to a new one"}},{"global":null,"name":"ClassnameIs","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the entity object has the correct classname","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the entity is using the said classname","args":{"%string_in% szClassname":"The classname we should look for"}},{"global":null,"name":"CTakeDamageInfo","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Constructs a CTakeDamageInfo class.","desc_md":"true","desc_file":"CTakeDamageInfo_Info","type":"class","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns CTakeDamageInfo class which can be manipulated","args":{}},{"global":null,"name":"CTakeDamageInfo_GetAttacker","namefake":"GetAttacker","isfunc":"true","classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Grabs the attacker from the damage info","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{}},{"global":null,"name":"CTakeDamageInfo_GetDamage","namefake":"GetDamage","isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Grabs the damage amount","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the damage amount","args":{}},{"global":null,"name":"CTakeDamageInfo_GetDamageForce","namefake":"GetDamageForce","isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Grabs the damage force vector","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the damage force vector","args":{}},{"global":null,"name":"CTakeDamageInfo_GetDamagePosition","namefake":"GetDamagePosition","isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Grabs the damage position vector","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the damage position vector","args":{}},{"global":null,"name":"CTakeDamageInfo_GetDamageType","namefake":"GetDamageType","isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Grabs the damage type","desc_md":null,"desc_file":null,"type":"Dmg","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the damage type","args":{}},{"global":null,"name":"CTakeDamageInfo_GetInflictor","namefake":"GetInflictor","isfunc":"true","classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Grabs the inflictor from the damage info","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{}},{"global":null,"name":"CTakeDamageInfo_GetReportedPosition","namefake":"GetReportedPosition","isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Grabs the reported position vector","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the damage position vector","args":{}},{"global":null,"name":"CTakeDamageInfo_GetWeapon","namefake":"GetWeapon","isfunc":"true","classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Grabs the attacker from the damage info","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{}},{"global":null,"name":"CTakeDamageInfo_ScaleDamage","namefake":"ScaleDamage","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Scale the damage","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float% flScaleAmount":"Scale our damage amount"}},{"global":null,"name":"CTakeDamageInfo_ScaleDamageForce","namefake":"ScaleDamageForce","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Scale our damage force","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float% flScaleAmount":"Scale our damage force"}},{"global":null,"name":"CTakeDamageInfo_SetAttacker","namefake":"SetAttacker","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Sets the attacker for this damage info","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pAttacker":"Our attacker entity object"}},{"global":null,"name":"CTakeDamageInfo_SetDamage","namefake":"SetDamage","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Sets the damage amount","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float% flDamage":"Our damage amount"}},{"global":null,"name":"CTakeDamageInfo_SetDamageForce","namefake":"SetDamageForce","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Sets the damage force amount","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector% damageForce":"Our damage force"}},{"global":null,"name":"CTakeDamageInfo_SetDamagePosition","namefake":"SetDamagePosition","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Sets the damage position","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector% damagePosition":"Our damage position"}},{"global":null,"name":"CTakeDamageInfo_SetDamageType","namefake":"SetDamageType","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Sets the damage type","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int% bitsDamageType":"Our damage type"}},{"global":null,"name":"CTakeDamageInfo_SetInflictor","namefake":"SetInflictor","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Sets the inflictor for this damage info","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pInflictor":"Our inflictor entity object"}},{"global":null,"name":"CTakeDamageInfo_SetReportedPosition","namefake":"SetReportedPosition","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Sets the reported position","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector% reportedPosition":"Our reported position"}},{"global":null,"name":"CTakeDamageInfo_SetWeapon","namefake":"SetWeapon","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CTakeDamageInfo","desc":"Sets the weapon for this damage info","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pWeapon":"Our weapon entity object"}},{"global":null,"name":"Distance","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the entity object is closer or futher away from a specified Vector","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the distance in centimeters","args":{"%Vector% pVector":"The Vector position we should check on the map"}},{"global":null,"name":"Dmg","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of damage types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"DMG_GENERIC":"generic damage -- do not use if you want players to flinch and bleed!","DMG_CRUSH":"crushed by falling or moving object","DMG_BULLET":"shot","DMG_SLASH":"cut, clawed, stabbed","DMG_BURN":"heat burned","DMG_FALL":"fell too far","DMG_BLAST":"explosive blast damage","DMG_CLUB":"crowbar, punch, headbutt","DMG_SHOCK":"electric shock","DMG_SONIC":"sound pulse shockwave","DMG_ENERGYBEAM":"laser or other high energy beam","DMG_NEVERGIB":"with this bit OR&apos;d in, no damage type will be able to gib victims upon death","DMG_ALWAYSGIB":"with this bit OR&apos;d in, any damage type can be made to gib victims upon death","DMG_DROWN":"Drowning","DMG_PARALYZE":"slows affected creature down","DMG_NERVEGAS":"nerve toxins, very bad","DMG_POISON":"blood poisoning - heals over time like drowning damage","DMG_RADIATION":"radiation exposure","DMG_DROWNRECOVER":"drowning recovery","DMG_ACID":"toxic chemicals or acid burns","DMG_SLOWBURN":"in an oven","DMG_BUCKSHOT":"not quite a bullet. Little, rounder, different"}},{"global":null,"name":"entindex","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the entity index of the object","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the entity index of the object","args":{}},{"global":null,"name":"EyeAngles","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the eye angles of the entity object","desc_md":null,"desc_file":null,"type":"QAngle","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a QAngle of the objects eye angles","args":{}},{"global":null,"name":"EyePosition","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the eye position of the entity object","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a Vector of the objects eye position","args":{}},{"global":null,"name":"GetAbsAngles","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the absolute angles from this object","desc_md":null,"desc_file":null,"type":"QAngle","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a QAngle of the objects absolute angles","args":{}},{"global":null,"name":"GetAbsOrigin","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the absolute origin of the entity object","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a Vector of the objects absolute location","args":{}},{"global":null,"name":"GetAbsVelocity","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the absolute velocity of the entity object","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a Vector of the objects absolute velocity","args":{}},{"global":null,"name":"GetBodyGroup","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Gets the bodygroup of the model","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the bodygroup state","args":{"%string_in% strBodyGroup":"The name of the bodygroup"}},{"global":null,"name":"GetClassname","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the classname from the entity object","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the classname of the entity","args":{}},{"global":null,"name":"GetEntityName","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the name from the entity object","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the name of the entity","args":{}},{"global":null,"name":"GetHealth","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the health of the object","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current health of the object","args":{}},{"global":null,"name":"GetLightingOrigin","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the origin of the lighting","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the Lighting origin position","args":{}},{"global":null,"name":"GetMass","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Gets the mass from this entity","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"GetMaxHealth","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the max health of the object","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the max health of the object","args":{}},{"global":null,"name":"GetModelIndex","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the model index from the entity object","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the model index of the entity object","args":{}},{"global":null,"name":"GetModelName","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the name of the current model","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the name of the model","args":{}},{"global":null,"name":"GetMoveType","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the MoveType of the object","desc_md":null,"desc_file":null,"type":"MoveType_t","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current MoveType of the object","args":{}},{"global":null,"name":"GetNextTarget","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"Grabs the next targeted entity object","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{}},{"global":null,"name":"GetOwner","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"Grabs the owner for this entity object","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{}},{"global":null,"name":"GetParent","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"Grabs the parent for this entity object","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{}},{"global":null,"name":"GetParentAttachment","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the parent attachment for this entity object","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the attachment ID","args":{}},{"global":null,"name":"GetRenderFX","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the RenderFX of the object","desc_md":null,"desc_file":null,"type":"RenderFX","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current RenderFX of the object","args":{}},{"global":null,"name":"GetRenderMode","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the RenderMode of the object","desc_md":null,"desc_file":null,"type":"RenderMode","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current RenderMode of the object","args":{}},{"global":null,"name":"GetSkin","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Gets the skingroup of the model","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the skingroup state","args":{}},{"global":null,"name":"GetTeamNumber","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current team number","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current team number of the object","args":{}},{"global":null,"name":"GetWaterLevel","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current water level","desc_md":null,"desc_file":null,"type":"WaterLevel","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current water level of the object","args":{}},{"global":null,"name":"Ignite","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the entity on fire","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float_in% flLifetime":"How long the flame will stay alive for"}},{"global":null,"name":"Intersects","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if a object is intersecting with this object","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if a object is intersecting with this object","args":{"%class_CBaseEntity% pOther":"The entity object that is intersecting with this object"}},{"global":null,"name":"IsAlive","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the entity object is alive or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if this object is still alive","args":{}},{"global":null,"name":"IsBSPModel","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the enttiy object is a BSP model","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if this object is a BSP model","args":{}},{"global":null,"name":"IsGrounded","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the entity object is on the ground or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the entity is on the ground","args":{}},{"global":null,"name":"IsInAir","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the entity object is in the air or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the entity is in the air","args":{}},{"global":null,"name":"IsInWorld","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the enttiy object is within the boundaries of the world, and not in the void","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if this object is still within the world","args":{}},{"global":null,"name":"IsMoving","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the enttiy object is moving around","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if this object is moving","args":{}},{"global":null,"name":"IsNetClient","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the enttiy object is a real player","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if this object is a real player","args":{}},{"global":null,"name":"IsPlayer","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the enttiy object is a player","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if this object is a player object","args":{}},{"global":null,"name":"MoveType_t","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of movement types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"MOVETYPE_NONE":"Never moves","MOVETYPE_WALK":"Player only - moving on the ground","MOVETYPE_STEP":"Gravity, special edge handling -- monsters use this","MOVETYPE_FLY":"No gravity, but still collides with stuff","MOVETYPE_FLYGRAVITY":"flies through the air + is affected by gravity","MOVETYPE_VPHYSICS":"uses VPHYSICS for simulation","MOVETYPE_PUSH":"No clip to world, push and crush","MOVETYPE_NOCLIP":"No gravity, no collisions, still do velocity&#47;avelocity","MOVETYPE_LADDER":"Used by players only when going onto a ladder","MOVETYPE_OBSERVER":"Observer movement, depends on player&apos;s observer mode"}},{"global":null,"name":"RegisterBreak","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Register&apos;s the name of an entity to the &quot;Entity register&quot;, so it can be recognized by the break function","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strEntityName":"The name of the entity that should be recognized to be broken"}},{"global":null,"name":"RegisterDamaged","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Register&apos;s the name of an entity to the &quot;Entity register&quot;, so it can be recognized by the use function","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strEntityName":"The name of the entity that should be recognized to be damaged"}},{"global":null,"name":"RegisterDrop","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Register&apos;s the name of an entity to the &quot;Entity register&quot;, so it can be recognized by the drop function","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strEntityName":"The name of the entity that should be recognized to be dropped"}},{"global":null,"name":"RegisterOutput","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Register&apos;s the output from an entity to the &quot;Entity register&quot;, so it can be recognized by the output function","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strOutputName":"The name of the output that should be recognized","%string_in% strEntityName":"The name of the entity that should be recognized"}},{"global":null,"name":"RegisterPickup","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Register&apos;s the name of an entity to the &quot;Entity register&quot;, so it can be recognized by the pickup function","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strEntityName":"The name of the entity that should be recognized to be picked up"}},{"global":null,"name":"RegisterUse","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Register&apos;s the name of an entity to the &quot;Entity register&quot;, so it can be recognized by the use function","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strEntityName":"The name of the entity that should be recognized to be used"}},{"global":null,"name":"RegisterWakeup","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Register&apos;s the name of an entity to the &quot;Entity register&quot;, so it can be recognized by the wake function","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strEntityName":"The name of the entity that should be recognized to be woken up"}},{"global":null,"name":"RemoveRegisterBreak","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Removes the break check from the entity name, if registered on the &quot;Entity Register&quot;","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strEntityName":"The name of the entity that should be removed from the register"}},{"global":null,"name":"RemoveRegisterDamaged","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Removes the damaged from the entity name, if registered on the &quot;Entity Register&quot;","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strEntityName":"The name of the entity that should be removed from the register"}},{"global":null,"name":"RemoveRegisterDrop","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Removes the drop from the entity name, if registered on the &quot;Entity Register&quot;","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strEntityName":"The name of the entity that should be removed from the register"}},{"global":null,"name":"RemoveRegisterOutput","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Removes the output from the entity name, if registered on the &quot;Entity Register&quot;","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strOutputName":"The name of the the output that should be removed from the register","%string_in% strEntityName":"The name of the entity that is linked to this output"}},{"global":null,"name":"RemoveRegisterPickup","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Removes the pickup from the entity name, if registered on the &quot;Entity Register&quot;","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strEntityName":"The name of the entity that should be removed from the register"}},{"global":null,"name":"RemoveRegisterUse","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Removes the use from the entity name, if registered on the &quot;Entity Register&quot;","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strEntityName":"The name of the entity that should be removed from the register"}},{"global":null,"name":"RemoveRegisterWokenUp","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"Entities","child":null,"desc":"Removes the waken check from the entity name, if registered on the &quot;Entity Register&quot;","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strEntityName":"The name of the entity that should be removed from the register"}},{"global":null,"name":"RenderFX","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of render effects types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"kRenderFxNone":"null","kRenderFxPulseSlow":"null","kRenderFxPulseFast":"null","kRenderFxPulseSlowWide":"null","kRenderFxPulseFastWide":"null","kRenderFxFadeSlow":"null","kRenderFxFadeFast":"null","kRenderFxSolidSlow":"null","kRenderFxSolidFast":"null","kRenderFxStrobeSlow":"null","kRenderFxStrobeFast":"null","kRenderFxStrobeFaster":"null","kRenderFxFlickerSlow":"null","kRenderFxFlickerFast":"null","kRenderFxNoDissipation":"null","kRenderFxGlowShell":"Glowing Shell","kRenderFxPulseFastWider":"null"}},{"global":null,"name":"RenderMode","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of render types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"kRenderNormal":"src","kRenderTransColor":"c*a+dest*(1-a)","kRenderTransTexture":"src*a+dest*(1-a)","kRenderGlow":"src*a+dest -- No Z buffer checks -- Fixed size in screen space","kRenderTransAlpha":"src*srca+dest*(1-srca)","kRenderTransAdd":"src*a+dest","kRenderEnvironmental":"not drawn, used for environmental effects","kRenderTransAddFrameBlend":"use a fractional frame value to blend between animation frames","kRenderTransAlphaAdd":"src + dest*(1-a)","kRenderWorldGlow":"Same as kRenderGlow but not fixed size in screen space","kRenderNone":"Don&apos;t render."}},{"global":null,"name":"SetAbsAngles","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Overrides the current absolute angles of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%QAngle_in% vecOrigin":"The new angles for this object"}},{"global":null,"name":"SetAbsOrigin","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Overrides the current absolute location of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector_in% vecOrigin":"The new location we want to place this object"}},{"global":null,"name":"SetAbsVelocity","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Overrides the current absolute velocity of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector_in% vecOrigin":"The new velocity for this object"}},{"global":null,"name":"SetBodyGroup","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the bodygroup of the model","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strBodyGroup":"The name of the bodygroup","%int_in% iNum":"The state of the bodygroup (starts from 0)"}},{"global":null,"name":"SetClassname","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the classname for the entity object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strClassname":"Our new entity classname"}},{"global":null,"name":"SetEntityName","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the name for the entity object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strName":"Our new entity name"}},{"global":null,"name":"SetHealth","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the health of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iHealth":"Sets the the new health value"}},{"global":null,"name":"SetLightingOrigin","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the entity on fire","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strTargetName":"The name of the entity (CBaseEntity object is also allowed)"}},{"global":null,"name":"SetMass","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the new mass for the entity","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float_in% flMass":"Our new mass"}},{"global":null,"name":"SetMaxHealth","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the max health of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iMaxHealth":"Sets the the new health value"}},{"global":null,"name":"SetModel","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Overrides the current active model with a new one","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szModelName":"Overrides the current model with a new one"}},{"global":null,"name":"SetModelIndex","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the current model to another one, if the model index is valid","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iModelIndex":"The index of the model we want to choose to"}},{"global":null,"name":"SetMoveType","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the MoveType of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%MoveType_in% moveType":"Sets the new movetype state"}},{"global":null,"name":"SetOwner","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the owner for this entity object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pOwner":"Our owner entity object"}},{"global":null,"name":"SetParent","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the parent for this entity object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pParent":"Our parent entity object"}},{"global":null,"name":"SetParentAttachment","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the parent attachment","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strAttachment":"Our attachment name","%bool% bMaintainOffset":"If true, we will maintain our offset"}},{"global":null,"name":"SetRenderFX","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the RenderFX of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%RenderFX_in% renderFX":"Sets the new render effect"}},{"global":null,"name":"SetRenderMode","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the RenderMode of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%RenderMode_in% renderMode":"Sets the new render mode"}},{"global":null,"name":"SetSize","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the size of the model.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector_in% vecMin":"Set the minimum size","%Vector_in% vecMax":"Set the maximum size"}},{"global":null,"name":"SetSkin","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the skingroup of the model","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iNum":"The state of the skingroup (starts from 0)"}},{"global":null,"name":"SetWaterLevel","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Sets the water level of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_WaterLevel% waterLevel":"The water level we want to set"}},{"global":null,"name":"Solid","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of solid types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"SOLID_NONE":"No solid model","SOLID_BBOX":"A BSP tree","SOLID_OBB":"An AABB","SOLID_OBB_YAW":"An OBB","SOLID_VPHYSICS":"An OBB, constrained so that it can only yaw","SOLID_CUSTOM":"Always call into the entity for tests","SOLID_BSP":"Solid vphysics object, get vcollide from the model and collide with that"}},{"global":null,"name":"SUB_FadeOut","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Fades out the entity, and then deletes it","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"SUB_Remove","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Removes the entity object from the world","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"SUB_StartFadeOut","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Fades out the entity after a specific amount of time, and then deletes it","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float_in% delay":"The amount of time it should wait until it gets deleted","%bool_in% bNotSolid":"If true, it will set the entity object to be non solid"}},{"global":null,"name":"TakeDamage","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Damages the entity","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%CTakeDamageInfo_in% DamageInfo":"The damage information"}},{"global":null,"name":"Teleport","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Overrides the current absolute location, angles and velocity of the object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector_in% vecOrigin":"The new location we want to place this object","%QAngle_in% qAngle":"The new angles we want for this object","%Vector_in% vecVelocity":"The new velocity for this object"}},{"global":null,"name":"WaterLevel","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of water level.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"WL_NotInWater":"null","WL_Feet":"null","WL_Waist":"null","WL_Eyes":"null"}}]},"CGameTrace":{"desc":"Manipulates the CGameTrace object entity, and it's values.","page":"CGameTrace","category":"Entities","desc_md":"false","type":"class","functions":[{"global":null,"name":"allsolid","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Checks if the plane is fully solid or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true, plane is not valid","args":{}},{"global":null,"name":"CGameTrace","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Constructs a CGameTrace class.","desc_md":null,"desc_file":null,"type":"class","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns CGameTrace class which can be manipulated","args":{}},{"global":null,"name":"COLLISIONGROUP","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of collision group types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"COLLISION_GROUP_NONE":"No collision","COLLISION_GROUP_DEBRIS":"Debris","COLLISION_GROUP_DEBRIS_TRIGGER":"Debris that can interact with triggers","COLLISION_GROUP_INTERACTIVE_DEBRIS":"Debris that can be interacted by players","COLLISION_GROUP_INTERACTIVE":"Interactive by players","COLLISION_GROUP_PLAYER":"Players","COLLISION_GROUP_BREAKABLE_GLASS":"Breakable glass planes","COLLISION_GROUP_PLAYER_MOVEMENT":"Players (When not standing still)","COLLISION_GROUP_WEAPON":"Weapons","COLLISION_GROUP_PROJECTILE":"Projectiles","COLLISION_GROUP_DOOR_BLOCKER":"Door blocker","COLLISION_GROUP_PASSABLE_DOOR":"Passable doors","COLLISION_GROUP_DISSOLVING":"Dissolving entities"}},{"global":null,"name":"contents","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Grabs the contents from the hit surface if we hit something","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the contents on other side of surface hit","args":{}},{"global":null,"name":"DestroyTracer","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Destroys the CGameTrace","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"DidHit","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Checks if the tracer hit something","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the tracer hit something","args":{}},{"global":null,"name":"DidHitNonWorldEntity","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Checks if the tracer hit a non world entity or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the tracer hit an entity object that isn't the world","args":{}},{"global":null,"name":"DidHitWorld","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Checks if the tracer hit the world or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the tracer hits the world","args":{}},{"global":null,"name":"endpos","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Grabs the end position of the tracer","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns Vector class which can be manipulated","args":{}},{"global":null,"name":"fraction","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Grabs the amount of time","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the time completed, 1.0 = didn't hit anything","args":{}},{"global":null,"name":"fractionleftsolid","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Grabs the amount of time subce we left a solid","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the time we left a solid, only valid if we started in solid","args":{}},{"global":null,"name":"GetEntityIndex","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Grabs the index from the object, if it&apos;s valid","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the index of the entity object","args":{}},{"global":null,"name":"hitbox","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"If hEnt points at the world entity, then this is the static prop index. Otherwise, this is the hitbox index.","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the hitbox index","args":{}},{"global":null,"name":"hitgroup","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Grabs the hitgroup if we hit something","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the hitgroup, 0 == generic, non-zero is specific body part","args":{}},{"global":null,"name":"m_pEnt","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"Grabs the entity, if it&apos;s valid","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns CBaseEntity@ class which can be manipulated","args":{}},{"global":null,"name":"MASK","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of mask types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"MASK_ALL":"checks everything","MASK_SOLID":"everything that is normally solid","MASK_NPCSOLID":"blocks npc movement","MASK_WATER":"water physics in these contents","MASK_OPAQUE":"everything that blocks lighting","MASK_VISIBLE":"everything that blocks line of sight for players","MASK_SHOT":"bullets see these as solid","MASK_SHOT_HULL":"non-raycasted weapons see this as solid (includes grates)","MASK_SHOT_PORTAL":"hits solids (not grates) and passes through everything else","MASK_SOLID_BRUSHONLY":"everything normally solid, except monsters (world+brush only)","MASK_PLAYERSOLID_BRUSHONLY":"everything normally solid for player movement, except monsters (world+brush only)","MASK_SPLITAREAPORTAL":"These are things that can split areaportals","MASK_CURRENT":"any moving water","MASK_DEADSOLID":"everything that blocks corpse movement","MASK_L4D_VISION":"everything that blocks line of sight in Left4Dead (players and bots all use this, and it hits other players and bots)","MASK_CONTAGION_VISION":"Same as MASK_L4D_VISION, except, we don&apos;t want to ignore OPAQUE, since some models uses it."}},{"global":null,"name":"startpos","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Grabs the start position of the tracer","desc_md":null,"desc_file":null,"type":"Vector","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns Vector class which can be manipulated","args":{}},{"global":null,"name":"startsolid","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"CGameTrace","desc":"Checks if the plane is solid or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true, the initial point was in a solid area","args":{}}]},"CBaseTrigger":{"desc":"Manipulates the CBaseTrigger object entity, and it's values.","page":"CBaseTrigger","subpage":"CBaseEntity","category":"Entities","desc_md":"false","type":"void","functions":[{"global":null,"name":"Disable","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Disables the trigger","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"Enable","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enables the trigger","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"GetName","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the name of the trigger","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the name of the trigger","args":{}},{"global":null,"name":"IsTouching","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if said entity is touching this trigger","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the said entity is touching this trigger","args":{"%class_CBaseEntity% pEntity":"The entity that is touching this trigger"}}]}},"Globals":{"Globals":{"desc":"A description of Globals or something","page":"Globals","category":"Globals","desc_md":"false","type":"void","functions":[{"global":"false","name":"AngleVectors","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Angles vectors","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%QAngle_in% pAngle":"Our angles","%Vector_out% pVector":"Our vector that will be modified"}},{"global":null,"name":"Distance","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks the distance between 2 vectors","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the distance in centimeters","args":{"%Vector% pVector1":"The Vector position we should check on the map","%Vector% pVector2":"The Vector position we should check on the map"}},{"global":"false","name":"GetCurrentMapName","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current name of the map (without the .bsp)","desc_md":"true","desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current name of the map","args":{}},{"global":"false","name":"GetCurrentTime","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current global time","desc_md":"false","desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"preset_return_float","args":{}},{"global":"false","name":"GetMapCycle","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current mapcycle as a string array","desc_md":"true","desc_file":null,"type":"array_string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a string array of the map cycle","args":{}},{"global":"false","name":"GetMaxClients","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the total amount of players that can be connected to the server","desc_md":"false","desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"preset_return_int","args":{}},{"global":"false","name":"IsCurrentMap","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if we are on a specific map","desc_md":"true","desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if we are on this specific map","args":{"%string_in% szMap":"Our mapname we want to check"}},{"global":"false","name":"stoi","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Converts the string into an interger","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current name of the map","args":{"%string_in% strValue":"Our string we want to convert into interger"}}]},"Log":{"desc":"Class used for logging purposes.","page":"Log","category":"Globals","desc_md":"false","type":"void","functions":[{"global":null,"name":"LogTypes","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of types (or severity) of messages.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"LOGTYPE_TRACE":"For &quot;code tracing&quot; purposes only, only scripters will need this.","LOGTYPE_INFO":"Useful information about plugin&apos;s behaviour like something has been finished with success.","LOGTYPE_CRITICAL":"A critical error prevents the plugin to function properly and needs immediate attention.","LOGTYPE_WARN":"Warning about potential problems that could be minor (incorrect behaviour, bad result...) or major (plugin failing to function properly).","LOGTYPE_ERROR":"An error causes problems but doesn&apos;t require immediate attention.","LOGTYPE_DEBUG":"Information that could be used by people like servers operators for troubleshooting purposes."}},{"global":null,"name":"PrintToServerConsole","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Log a message of a certain severity to the console.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Prints to the server console and logs","args":{"%enum_LogTypes% eLogType":"The type or severity of the message.","%string_in% strMsg":"The message to show."}},{"global":null,"name":"ToLocation","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Log a message of a certain severity within a specific context to a specific location.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Prints to the server console and logs","args":{"%string_in% strLogLocation":"The location the log file will be saved at","%enum_LogTypes% eLogType":"The type or severity of the message.","%string_in% strMsg":"The message to log."}}]},"Hooks":{"desc":"All the available events that can be used by plugins & map scripts","page":"Hooks","category":"Globals","desc_md":"false","type":"void","functions":[{"global":null,"name":"EscapeSequence","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When we we should start escaping on Flatline","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"FlatLine","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"HalfTime","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When we progressed half way on Flatline","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"FlatLine","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"InfectionState","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of infection states.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"state_none":"No longer infected","state_infection":"Normal infection","state_infection_forced":"Forced infection","state_infection_turning":"Turning into a zombie","state_infection_completed":"Infection completed, has fully turned"}},{"global":null,"name":"OnConCommand","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player is using the console.","desc_md":null,"desc_file":null,"type":"event","restrict":"plugin","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that is sending the message","%class_CASCommand% pArgs":"The console arguments"}},{"global":null,"name":"OnEndTouch","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When an entity is touching this trigger (if it gets accepted by the filters).","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Trigger","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pTrigger":"The trigger object that was fired","%string_in% strEntityName":"The name of the trigger","%class_CBaseEntity% pEntity":"The entity that stopped touching this trigger"}},{"global":null,"name":"OnEntityCreation","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When an entity is being created","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Entities","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strClassname":"The classname of the entity","%class_CBaseEntity% pEntity":"The entity that was recently created"}},{"global":null,"name":"OnEntityDestruction","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When an entity is being destroyed","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Entities","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strClassname":"The classname of the entity","%class_CBaseEntity% pEntity":"The entity that is being destroyed"}},{"global":null,"name":"OnInfectedDamaged","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the infected gets damaged.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Infected","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_Infected% pInfected":"The infected that got damaged","%CTakeDamageInfo_in% DamageInfo":"The damage information"}},{"global":null,"name":"OnInfectedKilled","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the infected gets killed.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Infected","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_Infected% pInfected":"The infected that got damaged","%CTakeDamageInfo_in% DamageInfo":"The damage information"}},{"global":null,"name":"OnInfectedSpawned","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the infected spawns","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Infected","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_Infected% pInfected":"The infected that spawned"}},{"global":null,"name":"OnPlayerConnect","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player has joined the game.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strPlayerName":"The name of the player","%string_in% strPlayerIP":"The IP of the player"}},{"global":null,"name":"OnPlayerConnected","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player has fully joined","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that just joined"}},{"global":null,"name":"OnPlayerDamaged","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player gets damaged.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that got damaged","%CTakeDamageInfo_in% DamageInfo":"The damage information"}},{"global":null,"name":"OnPlayerDisconnected","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player has disconnected.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that has disconnected"}},{"global":null,"name":"OnPlayerInfected","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player gets infected, or when the infection state updates.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that got infected","%enum_InfectionState% iState":"The infection state"}},{"global":null,"name":"OnPlayerInitSpawn","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player spawned for the first time.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that spawned"}},{"global":null,"name":"OnPlayerKilled","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player dies.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that died","%CTakeDamageInfo_in% DamageInfo":"The damage information"}},{"global":null,"name":"OnPlayerSpawn","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player spawned in the world.","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that recently spawned"}},{"global":null,"name":"OnStartTouch","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When an entity touched this trigger (if it gets accepted by the filters).","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Trigger","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pTrigger":"The trigger object that was fired","%string_in% strEntityName":"The name of the trigger","%class_CBaseEntity% pEntity":"The entity that touched this trigger"}},{"global":null,"name":"OnTouching","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When an entity stopped touching this trigger (if it gets accepted by the filters).","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"Trigger","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pTrigger":"The trigger object that was fired","%string_in% strEntityName":"The name of the trigger","%class_CBaseEntity% pEntity":"The entity that is touching this trigger"}},{"global":null,"name":"OnUserAdd","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the a player gets added to the admin list","desc_md":null,"desc_file":null,"type":"event","restrict":"plugin","eventtype":"Admin","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that got added as an admin"}},{"global":null,"name":"OnUserBanned","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player gets banned.","desc_md":null,"desc_file":null,"type":"event","restrict":"plugin","eventtype":"Admin","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that is going to get banned","%int_in% iMinutes":"The amount of time in minutes","%string_in% strReason":"The ban reason"}},{"global":null,"name":"OnUserBannedEx","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player gets banned (Extended).","desc_md":null,"desc_file":null,"type":"event","restrict":"plugin","eventtype":"Admin","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that is going to get banned","%class_CTerrorPlayer% pAdmin":"The player that called the ban","%int_in% iMinutes":"The amount of time in minutes","%string_in% strReason":"The ban reason"}},{"global":null,"name":"OnUserKicked","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player gets kicked.","desc_md":null,"desc_file":null,"type":"event","restrict":"plugin","eventtype":"Admin","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that is going to get kicked","%string_in% strReason":"The kick reason"}},{"global":null,"name":"OnUserRemove","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the a player gets removed to the admin list","desc_md":null,"desc_file":null,"type":"event","restrict":"plugin","eventtype":"Admin","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that got removed as an admin"}},{"global":null,"name":"PlayerSay","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the player is sending a chat message.","desc_md":null,"desc_file":null,"type":"event","restrict":"plugin","eventtype":"Player","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that is sending the message","%class_CASCommand% pArgs":"The chat arguments"}},{"global":null,"name":"WaveEnded","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the wave ended on Flatline","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"FlatLine","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool_in% bCompleted":"Did we complete this wave or not?"}},{"global":null,"name":"WaveLast","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When we started the last wave on Flatline","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"FlatLine","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"WaveStart","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the wave starts on Flatline","desc_md":null,"desc_file":null,"type":"event","restrict":"any","eventtype":"FlatLine","infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iRound":"The current round"}}]},"FileSystem":{"desc":"Read and writes .json files","page":"FileSystem","category":"Globals","desc_md":"false","type":"namespace","functions":[{"global":null,"name":"CreateFile_Json","namefake":"CreateFile","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"FileSystem::Json","child":null,"desc":"Creates a json file from the json object","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strFileName":"The file we want to save","%class_JsonValues% Json":"The JsonValues@ object"}},{"global":null,"name":"CreateJson","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"JsonValues","ref":null,"namespace":"FileSystem::Json","child":null,"desc":"Creates a JsonValues@ object that can be manipulated","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a JsonValues@ object that can be manipulated","args":{}},{"global":null,"name":"Exists","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"FileSystem::Json","child":null,"desc":"Checks if the value, or type, exists or not","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the value, or type, exists","args":{"%class_JsonValues% Json":"The JsonValues@ object","%string_in% strValue":"The value we should read","%string_in% strType":"[optional] The type we should read"}},{"global":null,"name":"GrabBool","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"FileSystem::Json","child":null,"desc":"Grabs the value from the JSON as a boolean","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the value as a boolean","args":{"%class_JsonValues% Json":"The JsonValues@ object","%string_in% strValue":"The value we should read","%string_in% strType":"[optional] The type we should read"}},{"global":null,"name":"GrabFloat","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"FileSystem::Json","child":null,"desc":"Grabs the value from the JSON as a float","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the value as a float","args":{"%class_JsonValues% Json":"The JsonValues@ object","%string_in% strValue":"The value we should read","%string_in% strType":"[optional] The type we should read"}},{"global":null,"name":"GrabInt","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"FileSystem::Json","child":null,"desc":"Grabs the value from the JSON as a interger","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the value as a interger","args":{"%class_JsonValues% Json":"The JsonValues@ object","%string_in% strValue":"The value we should read","%string_in% strType":"[optional] The type we should read"}},{"global":null,"name":"GrabString","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"FileSystem::Json","child":null,"desc":"Grabs the value from the JSON as a string","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the value as a string","args":{"%class_JsonValues% Json":"The JsonValues@ object","%string_in% strValue":"The value we should read","%string_in% strType":"[optional] The type we should read"}},{"global":null,"name":"ReadFile_Json","namefake":"ReadFile","isfunc":null,"classfunction":null,"base":null,"object":"JsonValues","ref":null,"namespace":"FileSystem::Json","child":null,"desc":"Reads a json file, and returns the info as a JsonValues@ object","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns a JsonValues@ object that can be manipulated","args":{"%string_in% strFileName":"The file we want to search for"}},{"global":null,"name":"Write_Json","namefake":"Write","isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":"FileSystem::Json","child":null,"desc":"Writes the info at the specific location within the JsonValues@ object","desc_md":"true","desc_file":"FileSystem_Json_Write","type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_JsonValues% Json":"The JsonValues@ object","%string_in% strType":"The json object we want to save our info at","%string_in% strArg":"The argument within the object","%string_in% strValue":"The value we want to save"}}]},"ThePresident":{"desc":"Class used to manipulate the class 'The President'","page":"ThePresident","category":"Globals","desc_md":"false","type":"void","functions":[{"global":null,"name":"AddSpawnWeaponOverride","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Override the default spawn weapons with random ammo sets","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% nSlot":"The slot we want to override","%string_in% szClassname":"The classname of the weapon&#47;item","%int_in% nAmmoMin":"The min amount of ammo","%int_in% nAmmoMax":"The max amount of ammo"}},{"global":null,"name":"AddWeaponItemAmmoToList","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Spawn a specific number of weapons &#47; ammo","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szClassname":"The classname of the weapon&#47;item","%int_in% iValue":"The amount we want allowed to spawn"}},{"global":null,"name":"AddWeaponItemAmmoToListSpawn","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Spawn a specific number of weapons &#47; ammo to a group","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strGroup":"The name of the group","%string_in% szClassname":"The classname of the weapon&#47;item","%int_in% iValue":"The amount we want allowed to spawn"}},{"global":null,"name":"CandidateType","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of gamemode types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"CT_DEV":"Developer Mode","CT_OBJECTIVE":"Escape","CT_EXTRACTION":"Extraction","CT_FLATLINE":"Flatline","CT_HUNTED":"Hunted","CT_PANIC_OBJECTIVE":"Panic Objective","CT_PANIC_CLASSIC":"Panic Classic"}},{"global":null,"name":"CleanupNonVisibleZombies","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Cleanup all zombies that a are not visible and have no enemy","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"CreateZombieAI","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Create a zombie AI at a specific place","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_ZombieID% eTense":"The music type should use","%Vector% vecLocation":"The location where the zombie will spawn at","%QAngle% qAng":"The direction the zombie will look at"}},{"global":null,"name":"FakeKillFeed","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Fake a kill, and send it to the kill feed","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% szKiller":"The name of the killer","%string_in% szVictim":"The name of the victim","%string_in% szWeapon":"Weapon type","%bool_in% bHeadshot":"Headshot kill?","%int_in% team_killer":"The team of the killer","%int_in% team_victim":"The team of the victim"}},{"global":null,"name":"FindPossibleAttackTarget","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Force a zombie, or all zombies, to find a possible target to attack","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_Infected% pTarget = null":"Our zombie that should find a possible target. If null, it will grab all zombies instead of the targeted one"}},{"global":null,"name":"ForceSubtitles","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Force subtitles from a specific location","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iEntIndex":"The entity we should emit this to, if set to 0, it will emit to all players","%Vector% vecLocation":"The location where the subtitle should emit from","%float_in% flRange":"The range of the subtitle","%string_in% szMsg":"The subtitle message","%Color% clr":"The color of the subtitle"}},{"global":null,"name":"GetGameModeType","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current gamemode type","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"IsInWeaponFastSwitch","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if we are allowing weapon fast switch","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"MusicTypes","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of music types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"MUSIC_CALM":"Calm Intensity","MUSIC_ALERT":"Alert Intensity","MUSIC_COMBAT":"Combat Intensity"}},{"global":null,"name":"OnObjective","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Send an objective message to all survivors","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strMessage":"The message that will be sent to the phone"}},{"global":null,"name":"OnObjectiveTarget","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Send an objective message to all survivors with a target of (X,Y,Z)","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strMessage":"The message that will be sent to the phone","%Vector% vecLocation":"The location where the message will pin point to"}},{"global":null,"name":"OverrideWeaponFastSwitch","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Override the weapon switch to use fast weapon switch. Flatline sets this to true by default.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%bool_in% state":"If true, the weapons will not play holster animation"}},{"global":null,"name":"SetHordeAttackArea","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Force a horde of zombies in a radius to run at the co-ords","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector% vecLocation":"The location where the message will pin point to","%float_in% flDist":"The slot we want to override"}},{"global":null,"name":"SetInfectedLives","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Set the number of lives an infected has","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iValue":"Sets the amount of zombie lives"}},{"global":null,"name":"SetMinMaxZombiesTypes","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"A riot, doctor or looter will spawn every X zombies between min and max.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_ZombieID% eTense":"The music type should use","%int_in% min":"The minimum amount","%int_in% max":"The maximum amount"}},{"global":null,"name":"SetMusicIntensity","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Set the music intensity for all players in the server.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_MusicTypes% eTense":"The music type should use"}},{"global":null,"name":"SetSpawnDelay","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Set the spawn delay for the zombies. -1 to clear the timer","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%float_in% flVal":"The amount of time when zombies should be able to respawns"}},{"global":null,"name":"SetSurvivorJoinTime","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Set the time until survivors are forced to join as zombies","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iVal":"The amount of time allowed until late joiners are forced to join zombies"}},{"global":null,"name":"SpawnZombies","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Spawn a number of zombies in enabled spawns","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iValue":"The amount we want to spawn"}},{"global":null,"name":"SpawnZombiesConstant","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Set the number of constant zombies to have in the world always","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iValue":"The amount we want to spawn"}},{"global":null,"name":"SpawnZombiesForce","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Forcefully spawn a number of zombies. Ignore survivors etc","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iValue":"The amount we want to spawn"}},{"global":null,"name":"SpawnZombiesForceArea","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Forcefully spawn a number of zombies in a specifically named area","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%int_in% iValue":"The amount we want to spawn","%string_in% szSpawn":"The name of the zombie spawn"}},{"global":null,"name":"ZombieID","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of zombie types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"ZID_ANY":"Random zombie, reads from the population data","ZID_RIOT":"Riot Zombie","ZID_DOCTOR":"Doctor Zombie","ZID_LOOTER":"Looter Zombie","ZID_RUNNER":"same as ZID_ANY, except it overrides the run animation with the player run animation instead"}}]},"Forwards":{"desc":"Forwards that is ran automatically","page":"Forwards","category":"Globals","desc_md":"false","type":"void","functions":[{"global":"true","name":"OnButtonUsed","namefake":null,"isfunc":null,"classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When a prop_button is used, if the said entity is registered on the &quot;Entity Register&quot;","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that used said entity","%class_CBaseEntity% pEntity":"The object of the entity"}},{"global":"true","name":"OnEntityBreak","namefake":null,"isfunc":null,"classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the entity is destroyed, if the said entity is registered on the &quot;Entity Register&quot;","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pAttacker":"The entity that attacked this entity","%string_in% strTargetname":"The targetname of the entity that got destroyed"}},{"global":"true","name":"OnEntityDamaged","namefake":null,"isfunc":null,"classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the entity is damaged, if the said entity is registered on the &quot;Entity Register&quot;","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pAttacker":"The entity that attacked this entity","%class_CBaseEntity% pEntity":"The object of the entity"}},{"global":"true","name":"OnEntityDropped","namefake":null,"isfunc":null,"classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When an entity is dropped, if the said entity is registered on the &quot;Entity Register&quot;","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that dropped said entity","%class_CBaseEntity% pEntity":"The object of the entity"}},{"global":"true","name":"OnEntityOutput","namefake":null,"isfunc":null,"classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the entity is sending a specific output, if the said output is registered on the &quot;Entity Register&quot;","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strOutput":"The output value that the output want to call","%class_CBaseEntity% pActivator":"The entity that activated the output","%class_CBaseEntity% pCaller":"The entity that called the output"}},{"global":"true","name":"OnEntityOutputParam","namefake":null,"isfunc":null,"classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the entity is sending a specific output, if the said output is registered on the &quot;Entity Register&quot;","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strOutput":"The output value that the output want to call","%string_in% strParamater":"The paramater of the output","%class_CBaseEntity% pActivator":"The entity that activated the output","%class_CBaseEntity% pCaller":"The entity that called the output"}},{"global":"true","name":"OnEntityPickedUp","namefake":null,"isfunc":null,"classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When an entity is picked up, if the said entity is registered on the &quot;Entity Register&quot;","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that picked up said entity","%class_CBaseEntity% pEntity":"The object of the entity"}},{"global":"true","name":"OnEntityUsed","namefake":null,"isfunc":null,"classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When an entity is used, if the said entity is registered on the &quot;Entity Register&quot;","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that used said entity","%class_CBaseEntity% pEntity":"The object of the entity"}},{"global":"true","name":"OnEntityWokenUp","namefake":null,"isfunc":null,"classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"However, this only applies to physics props.","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBaseEntity% pEntity":"The object of the entity"}},{"global":"true","name":"OnMapInit","namefake":null,"isfunc":"true","classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the map has started","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"deprecated","infobox_desc":"Use The President&apos;s [OnMapStart][ThePresident_OnMapStart] function instead.","return":null,"args":{}},{"global":"true","name":"OnMapShutdown","namefake":null,"isfunc":"true","classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the server is shutting down, or switching maps","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":"true","name":"OnPluginInit","namefake":null,"isfunc":"true","classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the plugin is starting","desc_md":"false","desc_file":null,"type":"void","restrict":"plugin","eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":"true","name":"OnPluginUnload","namefake":null,"isfunc":"true","classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the plugin is shutting down","desc_md":"false","desc_file":null,"type":"void","restrict":"plugin","eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":"true","name":"OnProcessRound","namefake":null,"isfunc":"true","classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Called each frame (when there are players present)","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":"true","name":"ThePresident_OnMapEnd","namefake":null,"isfunc":"true","classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the map has ended","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":"true","name":"ThePresident_OnMapStart","namefake":null,"isfunc":"true","classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the map has begun","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":"true","name":"ThePresident_OnRoundEnd","namefake":null,"isfunc":"true","classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the round has ended","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":"true","name":"ThePresident_OnRoundStart","namefake":null,"isfunc":"true","classfunction":"true","base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"When the round has begun","desc_md":"false","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}}]}},"Utilities":{"Vector2D":{"desc":"Commonly used utility functions","page":"Vector2D","category":"Utilities","type":"class","functions":[{"global":null,"name":"DestructVector2D","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector2D","desc":"Destroys the Vector2D","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"Length","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector2D","desc":"Grabs the length of the 2D Vector","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the length of our 2D Vector","args":{}},{"global":null,"name":"NormalizeInPlace","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector2D","desc":"Normalizes the 2D Vector","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns Vector2D class which can be manipulated","args":{}},{"global":null,"name":"opEquals","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector2D","desc":"Checks if the Vector2D vectors are the same","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if both Vector2Ds are the same","args":{"%Vector2D_in% other":"The 2D Vector we want to check"}},{"global":null,"name":"Vector2D","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Constructs a Vector2D class.","desc_md":"true","desc_file":"Vector2D_Construct","type":"class","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns Vector2D class which can be manipulated","args":{"%float% x":"Sets the x vector","%float% y":"Sets the y vector"}},{"global":null,"name":"x","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector2D","desc":"Grabs the x vector","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the X vector","args":{}},{"global":null,"name":"y","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector2D","desc":"Grabs the y vector","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the Y vector","args":{}}]},"Plugin Interface":{"desc":"Class used for plugin interface related purposes.","page":"Plugin Interface","category":"Utilities","desc_md":"false","type":"void","functions":[{"global":null,"name":"SetAuthor","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"PluginData","child":null,"desc":"Overrides the author of the plugin","desc_md":null,"desc_file":null,"type":"namespace","restrict":"plugin","eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strValue":"The author of the plguin"}},{"global":null,"name":"SetName","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"PluginData","child":null,"desc":"Overrides the name of the plugin","desc_md":null,"desc_file":null,"type":"namespace","restrict":"plugin","eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strValue":"The name of the plguin"}},{"global":null,"name":"SetVersion","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"PluginData","child":null,"desc":"Overrides the version of the plugin","desc_md":null,"desc_file":null,"type":"namespace","restrict":"plugin","eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strValue":"The version of the plguin"}}]},"Color":{"desc":"Class used for color related purposes.","page":"Color","category":"Utilities","desc_md":"false","type":"class","functions":[{"global":null,"name":"a","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Color","desc":"Grabs the alpha value","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the alpha value (0-255)","args":{}},{"global":null,"name":"b","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Color","desc":"Grabs the blue color value","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the color value (0-255)","args":{}},{"global":null,"name":"Color","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Constructs a Color class.","desc_md":"true","desc_file":"Color_Construct","type":"class","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns Color class which can be manipulated","args":{"%int% r":"Sets the red color","%int% g":"Sets the green color","%int% b":"Sets the blue color"}},{"global":null,"name":"DestroyColor","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Color","desc":"Destroys the color","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"g","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Color","desc":"Grabs the green color value","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the color value (0-255)","args":{}},{"global":null,"name":"r","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Color","desc":"Grabs the red color value","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the color value (0-255)","args":{}},{"global":null,"name":"ToHEX","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Color","desc":"Grabs the color code in HEX format","desc_md":"true","desc_file":"Color_ToHEX","type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the HEX value of the color code","args":{}},{"global":null,"name":"ToRGB","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Color","desc":"Converts HEX color to RGB","desc_md":null,"desc_file":null,"type":"class","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns Color class which can be manipulated","args":{"%string_in% szHexColor":"Our HEX value"}}]},"QAngle":{"desc":"Commonly used utility functions","page":"QAngle","category":"Utilities","type":"class","functions":[{"global":null,"name":"DestructQAngle","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"QAngle","desc":"Destroys the QAngle","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"Length","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"QAngle","desc":"Grabs the length of the QAngle","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the length of our QAngle","args":{}},{"global":null,"name":"opEquals","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"QAngle","desc":"Checks if the angles are the same","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if both QAngles are the same","args":{"%QAngle_in% other":"The Vector we want to check"}},{"global":null,"name":"QAngle","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Constructs a QAngle class.","desc_md":"true","desc_file":"QAngle_Construct","type":"class","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns QAngle class which can be manipulated","args":{"%float% x":"Sets the x angle","%float% y":"Sets the y angle","%float% z":"Sets the z angle"}},{"global":null,"name":"x","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"QAngle","desc":"Grabs the x angle","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the X angle","args":{}},{"global":null,"name":"y","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"QAngle","desc":"Grabs the y angle","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the Y angle","args":{}},{"global":null,"name":"z","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"QAngle","desc":"Grabs the z angle","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the Z angle","args":{}}]},"Chat":{"desc":"Class used for chat related purposes.","page":"Chat","category":"Utilities","desc_md":"false","type":"void","functions":[{"global":null,"name":"CenterMessage","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Prints a message on the center of the screen.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_ChatTeam% iChatType":"Determines which team this will be displayed to","%string_in% strMsg":"The message that will be displayed"}},{"global":null,"name":"CenterMessagePlayer","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Prints a message on the center of the screen.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBasePlayer% pPlayer":"Determines which player this will be displayed to","%string_in% strMsg":"The message that will be displayed"}},{"global":null,"name":"ChatTeam","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of team chat.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"all":"Will display the message to all players","survivor":"Will display the message to the survivor team only","zombie":"Will display the message to the zombie team only"}},{"global":null,"name":"HintMessage","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Prints a hint message that will be shown at the top of the screen.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_ChatTeam% iChatType":"Determines which team this will be displayed to","%string_in% strMsg":"The message that will be displayed"}},{"global":null,"name":"HintMessagePlayer","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Prints a hint message that will be shown at the top of the screen.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBasePlayer% pPlayer":"Determines which player this will be displayed to","%string_in% strMsg":"The message that will be displayed"}},{"global":null,"name":"PrintToChat","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Prints a message to the chat.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_ChatTeam% iChatType":"Determines which team this will be displayed to","%string_in% strMsg":"The message that will be displayed"}},{"global":null,"name":"PrintToChatPlayer","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Prints a message to the chat.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBasePlayer% pPlayer":"Determines which player this will be displayed to","%string_in% strMsg":"The message that will be displayed"}},{"global":null,"name":"PrintToConsole","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Prints a message to the client&apos;s console.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%enum_ChatTeam% iChatType":"Determines which team this will be displayed to","%string_in% strMsg":"The message that will be displayed"}},{"global":null,"name":"PrintToConsolePlayer","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Prints a message to the client&apos;s console.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CBasePlayer% pPlayer":"Determines which player this will be displayed to","%string_in% strMsg":"The message that will be displayed"}}]},"Math":{"desc":"Used to make simple to complex math related equations.","page":"Math","category":"Utilities","type":"namespace","functions":[{"global":null,"name":"AngleMod","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Gets the angle modulation","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the angle","args":{"%float_in% flAngle":"Our angle input"}},{"global":null,"name":"clamp","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Clamps the value, so it doesn&apos;t go beyond the min or max value","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"This value also allows for uint64, int64, int, float and double values.","return":null,"args":{"%int_in% iValue":"Our raw input value","%int_in% iMin":"The min value it can reach","%int_in% iMax":"The max value it can reach"}},{"global":null,"name":"max","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Clamps the maximum value","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"This value also allows for uint64, int64, int, float and double values.","return":null,"args":{"%int_in% iClamp":"The max value it can reach","%int_in% iValue":"Our raw input value"}},{"global":null,"name":"min","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Clamps the minimum value","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":"true","infobox_type":"info","infobox_desc":"This value also allows for uint64, int64, int, float and double values.","return":null,"args":{"%int_in% iValue":"Our raw input value","%int_in% iClamp":"The min value it can reach"}},{"global":null,"name":"RandomFloat","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Randomizes the float value.","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the randomized float value","args":{"%float_in% flLow":"The lowest value it can reach","%float_in% flHigh":"The highest value it can reach"}},{"global":null,"name":"RandomInt","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Randomizes the interger value.","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the randomized interger value","args":{"%int_in% iLow":"The lowest value it can reach","%int_in% iHigh":"The highest value it can reach"}}]},"Utils":{"desc":"Commonly used utility functions","page":"Utils","category":"Utilities","type":"void","functions":[{"global":"false","name":"CollectInfected","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Collects all zombies on the map","desc_md":"true","desc_file":null,"type":"array_int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns an object array","args":{}},{"global":"false","name":"CollectPlayers","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Collects all players on the map","desc_md":"true","desc_file":null,"type":"array_int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns an object array","args":{}},{"global":"false","name":"CollectSurvivors","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Collects all survivor npcs on the map","desc_md":"true","desc_file":null,"type":"array_int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns an object array","args":{}},{"global":null,"name":"Convert","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Converts a player&apos;s SteamID to another ID format, such as SteamID32, 64 or SteamID3.","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the specified converted SteamID of choice.","args":{"%enum_SteamIDFormat% iFormat":"SteamID format type","%string_in% strSteamID":"The SteamID it should convert"}},{"global":null,"name":"EnvExplosion","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Cause an explosions","desc_md":"true","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector% vecOrigin":"The place where we want the explosion to occur at","%float_in% flDamage":"The amount of damage we want to cause"}},{"global":null,"name":"EscapeCharacters","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Escapes the characters in a string.","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the escape characters.","args":{"%string_in% strValue":"Our raw string input"}},{"global":null,"name":"FadeFlag_t","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of Fade Flags.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"fade_in":"Fade in","fade_out":"Fade out (not in)","fade_modulate":"Modulate (don&apos;t blend)","fade_stayout":"ignores the duration, stays faded out until new ScreenFade message received"}},{"global":null,"name":"FakeRecoil","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Gives the player fake recoil","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player that should get fake recoil","%float% FlKick":"How much should the recoil kick?","%float% flDamp":"Damps the kick, higher the value, easier it is to control","%float% flX":"How wide should the recoil go?","%float% flY":"How high should the recoil go?","%bool% bLeftPattern":"If true, the recoil will head to the left, instead of right"}},{"global":"true","name":"FindEntityByClassname","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"This will search for an entity that matches the corresponding classname.","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{"%class_CBaseEntity% pEntity":"The specified entity it should start from (null by default)","%string_in% strClassname":"The specified classname it should search for"}},{"global":"true","name":"FindEntityByEntIndex","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"This will search for an entity that matches the corresponding classname.","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{"%int_in% entindex":"The specific entity by index"}},{"global":"true","name":"FindEntityByName","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseEntity","ref":null,"namespace":null,"child":null,"desc":"This will search for an entity that matches the corresponding name.","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseEntity@ object, which can be manipulated.","args":{"%class_CBaseEntity% pEntity":"The specified entity it should start from (null by default)","%string_in% strClassname":"The specified entity name it should search for"}},{"global":null,"name":"FloatToInt","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Converts the float to a interger value.","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the specified value as a interger.","args":{"%float_in% flValue":"Our float to input"}},{"global":null,"name":"GameText","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Prints a hud message for all players","desc_md":"true","desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strMessage":"The message for the game text","%HudTextParams_in% params":"The params for the game text"}},{"global":null,"name":"GameTextPlayer","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Prints a hud message for the specific player","desc_md":"true","desc_file":"GameTextPlayer","type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pPlayer":"The player it should display the message for","%string_in% strMessage":"The message for the game text","%HudTextParams_in% params":"The params for the game text"}},{"global":null,"name":"GetDifficulty","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the current difficulty","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the current difficulty","args":{}},{"global":null,"name":"GetNumPlayers","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the amount of players from a specific team.","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the amount of players of said team","args":{"%enum_ZPTeams% iTeam":"The team it should try to search for","%bool_in% bAlive":"If true, it will only check for alive players"}},{"global":"true","name":"GetPlayerByName","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CTerrorPlayer","ref":null,"namespace":null,"child":null,"desc":"Grabs the player entity by name.","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CTerrorPlayer@ object, which can be manipulated.","args":{"%string_in% strValue":"Our player name, index or just their userid.","%bool_in% bSpecific":"If true, it will try to make sure to find the player by the exact name, index or userid."}},{"global":"true","name":"GetPlayerBySteamID","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CTerrorPlayer","ref":null,"namespace":null,"child":null,"desc":"Grabs the player entity by SteamID32.","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CTerrorPlayer@ object, which can be manipulated.","args":{"%string_in% strSteamID":"SteamID32"}},{"global":"true","name":"GetRandomPlayer","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CTerrorPlayer","ref":null,"namespace":null,"child":null,"desc":"Grabs a random player from the specified team, and if it should search for alive players only.","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CTerrorPlayer@ object, which can be manipulated.","args":{"%enum_ZPTeams% iTeam":"The team it should try to search for","%bool_in% bAlive":"If true, it will only check for alive players"}},{"global":null,"name":"GetServerIP","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Grabs the IP Address of the server.","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the IP Address of the server","args":{}},{"global":null,"name":"NumbersOnly","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the string contains numbers.","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if it only contains numbers","args":{"%string_in% strValue":"The string we want to check"}},{"global":null,"name":"ScreenFade","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Fades the screen for a specific player, or everyone on the server","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CTerrorPlayer% pActivator":"If not null, it will only go to the specified player. If null, all players will get the message","%Color% clr":"The color of the Game Instructor message","%float_in% flDuration":"How long it will take to fade in&#47;out","%float_in% flHoldTime":"The max time it will hold the fade","%enum_FadeFlag_t% eFlags":"What kind of fade flags it should use"}},{"global":null,"name":"Steam64ToSteam32","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Converts a player&apos;s SteamID64 to SteamID32.","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the SteamID32.","args":{"%string_in% strSteamID":"The steamid64 it should convert"}},{"global":null,"name":"SteamIDFormat","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of SteamID&apos;s that can be converted.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"AUTO":"Auto-detect format --- this also supports other unlisted formats such as full profile URLs.","STEAMID32":"Classic STEAM_x:y:zzzzzz | x = 0&#47;1","STEAMID64":"SteamID64: 7656119xxxxxxxxxx","STEAMID3":"SteamID3 format: [U:1:xxxxxx]","S32":"Raw 32-bit SIGNED format. This is a raw steamid index that overflows into negative bitspace.<br>This is the format that SourceMod returns with GetSteamAccountID, and will always fit into a 32-bit signed variable. (e.g. a 32-bit PHP integer).","RAW":"Raw index. like 64-bit minus the base value."}},{"global":null,"name":"StrContains","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the the current string contains certain words.","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if it contains the string we are looking for","args":{"%string_in% strFind":"The string we want to find","%string_in% strTarget":"The string we are looking for"}},{"global":null,"name":"StrEql","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Checks if the both strings are equal.","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if both strings are equal","args":{"%string_in% strFind":"The string we want to find","%string_in% strTarget":"The string we are looking for","%bool_in% bIgnoreSensitive":"If true, it will ignore sensitivity"}},{"global":"true","name":"StringToArgSplit","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CASCommand","ref":null,"namespace":null,"child":null,"desc":"This will split the string, and become an argument value","desc_md":null,"desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CASCommand@ object, which can be manipulated.","args":{"%string_in% szString":"The string we want to split","%string_in% szSplit":"The value to split the string into an argument"}},{"global":null,"name":"StringToFloat","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Converts the string to a float value.","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the specified value as a float.","args":{"%string_in% strValue":"Our raw string input"}},{"global":null,"name":"StringToInt","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Converts the string to a interger value.","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the specified value as a interger.","args":{"%string_in% strValue":"Our raw string input"}},{"global":null,"name":"StrReplace","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"This will replace our string, to whatever we desire.","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the new replaced string. If nothing was replaced, it will return the original string.","args":{"%string_in% strValue":"Our current string of choice","%string_in% strFind":"The specified string we want to find","%string_in% strReplace":"The string we want to replace"}},{"global":"true","name":"ToBasePlayer","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBasePlayer","ref":null,"namespace":null,"child":null,"desc":"Grabs the player entity from the player slot.","desc_md":"true","desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBasePlayer@ object, which can be manipulated.","args":{"%int_in% iSlot":"Our player slot (1-24)"}},{"global":"true","name":"ToBaseTrigger","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CBaseTrigger","ref":null,"namespace":null,"child":null,"desc":"Grabs the base trigger object from the entity object (if it&apos;s a base trigger)","desc_md":"true","desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CBaseTrigger@ object, which can be manipulated.","args":{"%class_CBaseEntity% pEntity":"CBaseEntity object of choice"}},{"global":"true","name":"ToInfected","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"Infected","ref":null,"namespace":null,"child":null,"desc":"Grabs the infected object, if the entindex is valid","desc_md":"true","desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a Infected@ object, which can be manipulated.","args":{"%int_in% iEntIndex":"The entity index"}},{"global":"true","name":"ToPropDoor","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CPropDoorRotatingBreakable","ref":null,"namespace":null,"child":null,"desc":"Grabs the door object from the entity object (if it&apos;s a door)","desc_md":"true","desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CPropDoorRotatingBreakable@ object, which can be manipulated.","args":{"%class_CBaseEntity% pEntity":"CBaseEntity object of choice"}},{"global":"true","name":"ToTerrorPlayer","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CTerrorPlayer","ref":null,"namespace":null,"child":null,"desc":"Grabs the player entity from the player slot.","desc_md":"true","desc_file":null,"type":"object","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns as a CTerrorPlayer@ object, which can be manipulated.","args":{"%int_in% iSlot":"Our player slot (1-24)"}},{"global":null,"name":"TraceHull","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Create&apos;s a hull tracer for CGameTrace.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector_in% vecStart":"Starting point for the tracer","%Vector_in% vecEnd":"Ending point for the tracer","%Vector_in% vecMin":"Minimum size of the tracer","%Vector_in% vecMax":"Maximum size of the tracer","%enum_MASK% iMask":"Specifies what kind of mask it should use (Multiple masks are allowed)","%class_CBaseEntity% pEntityIgnore":"Ignores said entity, so it won&apos;t hit it","%enum_COLLISIONGROUP% iCollision":"Specifies what kind of collision it should check for","%CGameTrace_out% trace":"Outputs the results for the tracer"}},{"global":null,"name":"TraceLine","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Create&apos;s a line tracer for CGameTrace.","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector_in% vecStart":"Starting point for the tracer","%Vector_in% vecEnd":"Ending point for the tracer","%enum_MASK% iMask":"Specifies what kind of mask it should use (Multiple masks are allowed)","%class_CBaseEntity% pEntityIgnore":"Ignores said entity, so it won&apos;t hit it","%enum_COLLISIONGROUP% iCollision":"Specifies what kind of collision it should check for","%CGameTrace_out% trace":"Outputs the results for the tracer"}},{"global":null,"name":"ViewPunch","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Punches the player view, in the specific area","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%Vector% vecOrigin":"The place where it will punch the players (if they are within range. It only applies if flRadius is higher than 0)","%QAngle% angViewPunch":"The punch angles to apply.","%float_in% flRadius":"The radius around this entity in which to affect players. If set to 0, it will effect everyone","%bool_in% bAir":"If true, it will punch players in the air"}},{"global":null,"name":"ZPTeams","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Enumeration of team types.","desc_md":null,"desc_file":null,"type":"enum","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"survivor":"Checks for players that are survivors","zombie":"Checks for players that are zombies"}}]},"Plugin Network":{"desc":"Class used for plugin networking related purposes.","page":"Plugin Network","category":"Utilities","desc_md":"false","type":"void","functions":[{"global":null,"name":"CallFunction","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"Network","child":null,"desc":"Calls a specified function","desc_md":"true","desc_file":"Network_CallFunction","type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strValue":"Our network value","%NetData_in% data":"Our network data"}},{"global":null,"name":"Create","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CNetworked","ref":null,"namespace":"Network","child":null,"desc":"Creates a new network, if it already doesn&apos;t exist. If it already exists, it will simply grab it.","desc_md":"true","desc_file":"Network_Create","type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns CNetworked@ class which can be manipulated","args":{"%string_in% strNetwork":"Our new network","%bool% bDestroyOnMapChange":"If true, It will destroy the network when the map changes"}},{"global":null,"name":"Destroy","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"Network","child":null,"desc":"Destroys our networked value","desc_md":null,"desc_file":null,"type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strNetwork":"Our network"}},{"global":null,"name":"DestroyNetData","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":"NetData","namespace":null,"child":null,"desc":"Destroys the NetData","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"Dump","namefake":null,"isfunc":null,"classfunction":null,"base":"void","object":null,"ref":null,"namespace":"Network","child":null,"desc":"Dumps the information from our networked object","desc_md":null,"desc_file":null,"type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%class_CNetworked% pNetwork":"Our networked object"}},{"global":null,"name":"Get","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CNetworked","ref":null,"namespace":"Network","child":null,"desc":"Grabs a CNetworked@ object","desc_md":"true","desc_file":"Network_Get","type":"namespace","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns CNetworked@ class which can be manipulated","args":{"%string_in% strNetwork":"Our network"}},{"global":null,"name":"GetInt","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"NetData","namespace":null,"child":null,"desc":"Grabs the interger from the index value","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the data as int","args":{"%int_in% iValue":"Our index value, starts from 0"}},{"global":null,"name":"GetInt_NetObject","namefake":"GetInt","isfunc":null,"classfunction":null,"base":null,"object":"NetObject","ref":null,"namespace":null,"child":null,"desc":"Grabs the interger from the index value","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the data as int","args":{"%int_in% iValue":"Our index value, starts from 0"}},{"global":null,"name":"GetNetworkName","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":"CNetworked","ref":null,"namespace":null,"child":null,"desc":"Grabs the the networked name","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the network name","args":{}},{"global":null,"name":"GetString","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"NetData","namespace":null,"child":null,"desc":"Grabs the string from the index value","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the data as string","args":{"%int_in% iValue":"Our index value, starts from 0"}},{"global":null,"name":"GetString_NetObject","namefake":"GetString","isfunc":null,"classfunction":null,"base":null,"object":"NetObject","ref":null,"namespace":null,"child":null,"desc":"Grabs the string from the index value","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the data as string","args":{"%int_in% iValue":"Our index value, starts from 0"}},{"global":null,"name":"GetUint64","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"NetData","namespace":null,"child":null,"desc":"Grabs the uint64 from the index value","desc_md":null,"desc_file":null,"type":"uint64","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the data as uint64","args":{"%int_in% iValue":"Our index value, starts from 0"}},{"global":null,"name":"GetUint64_NetObject","namefake":"GetUint64","isfunc":null,"classfunction":null,"base":null,"object":"NetObject","ref":null,"namespace":null,"child":null,"desc":"Grabs the uint64 from the index value","desc_md":null,"desc_file":null,"type":"uint64","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the data as uint64","args":{"%int_in% iValue":"Our index value, starts from 0"}},{"global":null,"name":"HasIndexValue","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"NetData","namespace":null,"child":null,"desc":"Checks if the index value is valid","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the index value exist","args":{"%int_in% iValue":"Our index value, starts from 0"}},{"global":null,"name":"HasIndexValue_NetObject","namefake":"HasIndexValue","isfunc":null,"classfunction":null,"base":null,"object":"NetObject","ref":null,"namespace":null,"child":null,"desc":"Checks if the index value is valid","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if the index value exist","args":{"%int_in% iValue":"Our index value, starts from 0"}},{"global":null,"name":"NetData","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"NetData","namespace":null,"child":null,"desc":"Constructs a NetData class.","desc_md":null,"desc_file":null,"type":"class","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns NetData class which can be manipulated","args":{}},{"global":null,"name":"Network_GetBool","namefake":"GetBool","isfunc":null,"classfunction":null,"base":null,"object":"CNetworked","ref":null,"namespace":null,"child":null,"desc":"Grabs the boolean from the networked value","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the boolean of the networked value","args":{"%string_in% strValue":"Our networked value"}},{"global":null,"name":"Network_GetFloat","namefake":"GetFloat","isfunc":null,"classfunction":null,"base":null,"object":"CNetworked","ref":null,"namespace":null,"child":null,"desc":"Grabs the float from the networked value","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the float of the networked value","args":{"%string_in% strValue":"Our networked value"}},{"global":null,"name":"Network_GetInt","namefake":"GetInt","isfunc":null,"classfunction":null,"base":null,"object":"CNetworked","ref":null,"namespace":null,"child":null,"desc":"Grabs the interger from the networked value","desc_md":null,"desc_file":null,"type":"int","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the interger of the networked value","args":{"%string_in% strValue":"Our networked value"}},{"global":null,"name":"Network_GetString","namefake":"GetString","isfunc":null,"classfunction":null,"base":null,"object":"CNetworked","ref":null,"namespace":null,"child":null,"desc":"Grabs the string from the networked value","desc_md":null,"desc_file":null,"type":"string","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the string of the networked value","args":{"%string_in% strValue":"Our networked value"}},{"global":null,"name":"Save","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":"CNetworked","ref":null,"namespace":null,"child":null,"desc":"Saves the value into our network","desc_md":"true","desc_file":"Network_Example","type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% strValue":"Our network value","%string_in% strInput":"Our network input"}},{"global":null,"name":"Write","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":"NetData","namespace":null,"child":null,"desc":"Writes the data to the NetData","desc_md":"true","desc_file":"NetData_Write","type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{"%string_in% value":"Our input value"}}]},"Vector":{"desc":"Commonly used utility functions","page":"Vector","category":"Utilities","type":"class","functions":[{"global":null,"name":"DestructVector","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector","desc":"Destroys the Vector","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}},{"global":null,"name":"Length","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector","desc":"Grabs the length of the Vector","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the length of our Vector","args":{}},{"global":null,"name":"Length2D","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector","desc":"Grabs the length of the Vector (Same as Vector2D)","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the length of our Vector in 2D","args":{}},{"global":null,"name":"Normalized","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector","desc":"Normalizes the Vector","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns Vector class which can be manipulated","args":{}},{"global":null,"name":"opEquals","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector","desc":"Checks if the vectors are the same","desc_md":null,"desc_file":null,"type":"bool","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns true if both Vectors are the same","args":{"%Vector_in% other":"The Vector we want to check"}},{"global":null,"name":"Vector","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":null,"desc":"Constructs a Vector class.","desc_md":"true","desc_file":"Vector_Construct","type":"class","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns Vector class which can be manipulated","args":{"%float% x":"Sets the x vector","%float% y":"Sets the y vector","%float% z":"Sets the z vector"}},{"global":null,"name":"x","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector","desc":"Grabs the x vector","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the X vector","args":{}},{"global":null,"name":"y","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector","desc":"Grabs the y vector","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the Y vector","args":{}},{"global":null,"name":"z","namefake":null,"isfunc":null,"classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector","desc":"Grabs the z vector","desc_md":null,"desc_file":null,"type":"float","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":"Returns the Z vector","args":{}},{"global":null,"name":"Zero","namefake":null,"isfunc":"true","classfunction":null,"base":null,"object":null,"ref":null,"namespace":null,"child":"Vector","desc":"Resets the Vector back to 0,0,0","desc_md":null,"desc_file":null,"type":"void","restrict":null,"eventtype":null,"infobox_enable":null,"infobox_type":null,"infobox_desc":"null","return":null,"args":{}}]}}},"doc_extras":{"manual/doc_script.html":"Angelscript 2.34.0 scripting manual"}}